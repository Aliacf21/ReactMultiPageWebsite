{"version":3,"sources":["components/Navigation.jsx","components/Home.jsx","components/About.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","style","backgroundColor","color","height","to","id","this","props","location","pathname","textAlign","cartItemCount","Component","withRouter","Home","class","Carousel","Item","interval","src","alt","default_todoList","load","str_todos","localStorage","getItem","JSON","parse","store","todoList","setItem","stringify","About","state","addItem","foodType","myGlazing","quantity","price","image","myTotal","push","glazing","total","setState","increase","loaded_todoList","newTodoContent","row1","row2","customerChoiceForQuantity","customerChoiceForGlazing","MyModal","title","React","useState","show","setShow","handleClose","Button","onClick","variant","size","paddingLeft","border","Modal","onHide","backdrop","animation","aria-labelledby","centered","Header","closeButton","fontSize","Title","Body","Card","Img","ButtonType","button1","button2","button3","button4","ButtonType1","Footer","MyCard","text","link","marginTop","Text","updateValue","someValue","document","getElementById","innerHTML","marginBottom","width","value","type","name","Contact","deleteItem","event","i","stopPropagation","splice","decrease","ProductDescription","length","description","marginRight","e","borderRadius","finalTotal","list_content","undefined","todo","itemCount","marginLeft","count","load_count","App","incrementCount","console","log","decrementCount","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oUAMMA,G,uLAEJ,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,0BAA0BC,MAAO,CAACC,gBAAiB,SAAUC,MAAO,QAASC,OAAQ,SAClG,yBAAKJ,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,yBAAyBJ,MAAO,CAACE,MAAO,UACzE,kDAGD,yBAAKH,UAAU,2BAA2BM,GAAG,oBAC3C,wBAAIN,UAAU,sBACZ,wBACEA,UAAS,oBAC0B,2BAAjCO,KAAKC,MAAMC,SAASC,SAAwC,SAAW,KAGzE,kBAAC,IAAD,CAAMV,UAAU,WAAWK,GAAG,yBAAyBJ,MAAO,CAACE,MAAO,UAAtE,OAEE,0BAAMH,UAAU,WAAhB,eAGJ,wBACEA,UAAS,oBAC0B,iCAAjCO,KAAKC,MAAMC,SAASC,SAA8C,SAAW,KAG/E,kBAAC,IAAD,CAAOV,UAAU,WAAWK,GAAG,+BAA+BJ,MAAO,CAACE,MAAO,UAA7E,aAIF,wBACEH,UAAS,oBAC0B,mCAAjCO,KAAKC,MAAMC,SAASC,SAAgD,SAAW,KAIjF,kBAAC,IAAD,CAAMV,UAAU,WAAWK,GAAG,iCAAiCJ,MAAO,CAACE,MAAO,UAA9E,iBACgB,0BAAMH,UAAU,MAAMC,MAAO,CAACU,UAAU,WAAYJ,KAAKC,MAAMI,0B,GAtCtEC,cAqDVC,cAAWf,G,QCGXgB,MA3Df,WAGE,OACE,yBAAKf,UAAU,QACb,yBAAKgB,MAAM,aACT,yBAAKA,MAAM,+BACT,yBAAKA,MAAM,UACT,kBAACC,EAAA,EAAD,KAEE,kBAACA,EAAA,EAASC,KAAV,CAAeC,SAAU,KACvB,yBACEnB,UAAU,gBACVoB,IAAI,wFACJC,IAAI,cACJpB,MAAO,CAAEG,OAAQ,YAIrB,kBAACa,EAAA,EAASC,KAAV,CAAeC,SAAU,KACvB,yBACEnB,UAAU,gBACVoB,IAAI,gGACJC,IAAI,cACHpB,MAAO,CAAEG,OAAQ,YAMpB,kBAACa,EAAA,EAASC,KAAV,CAAeC,SAAU,KACzB,yBACEnB,UAAU,gBACVoB,IAAI,0FACJC,IAAI,cACJpB,MAAO,CAAEG,OAAQ,eAOzB,yBAAKY,MAAM,+BACX,yBAAKA,MAAM,UACT,wBAAIA,MAAM,qBAAV,YACA,yR,gCC7CNM,EAAmB,GAEzB,SAASC,IACP,IAAIC,EAAYC,aAAaC,QAAQ,YAErC,OAAQF,GAAaG,KAAKC,MAAMJ,GAGlC,SAASK,EAAMC,GACbL,aAAaM,QAAQ,WAAWJ,KAAKK,UAAUF,IAG3BP,IAAtB,IAsNeU,E,2MAnNbC,MAAQ,G,EAYRC,QAAU,SAACC,EAAUC,EAAWC,EAAUC,EAAOC,GAC/C,IAAIV,EAAW,EAAKI,MAAMJ,SAEtBW,EAAUF,EAAQD,EACtBR,EAASY,KAAK,CAACN,SAAUA,EAAUO,QAAQN,EAAWC,SAASA,EAAUM,MAAMH,EAASD,MAAOA,IAC/F,EAAKK,SAAS,CAAEf,SAAUA,IAC1BD,EAAMC,GAEN,EAAKtB,MAAMsC,Y,mFAjBX,IAAIC,EAAkBxB,IACrBhB,KAAKsC,SAEN,CAACf,SAAUiB,GAAmBzB,EAC9B0B,eAAgB,O,+BAyKf,IAxJF,IAAD,OAUIC,EAAO,GACPC,EAAO,GAGPC,EAA4B,IAC5BC,EAA2B,OAIzBC,EAAU,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOf,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAAW,EACjBe,IAAMC,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,KAEnCC,EAAc,kBAAMD,GAAQ,IAIlC,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQ5C,MAAM,eAAe6C,QALd,kBAAMH,GAAQ,IAKqBI,QAAQ,QAAQC,KAAK,KAAK9D,MAAO,CAACC,gBAAiB,QAASC,MAAM,QAAS6D,YAAa,EAAIC,OAAQ,SAAS,2BAAIX,IAClK,kBAACY,EAAA,EAAD,CAAOT,KAAMA,EAAMU,OAAQR,EAAaS,SAAS,SAAUC,WAAW,EAAON,KAAK,KAAKO,kBAAgB,gCAAgCC,UAAQ,GAC7I,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,EAACxE,MAAO,CAACC,gBAAiB,SAAUC,MAAO,QAASuE,SAAU,UACtF,kBAACR,EAAA,EAAMS,MAAP,KAAcrB,IAEhB,kBAACY,EAAA,EAAMU,KAAP,KACC,yBAAK5D,MAAM,OACV,yBAAKA,MAAM,YACT,kBAAC6D,EAAA,EAAKC,IAAN,CAAU7E,MAAO,CAAEG,OAAQ,SAAW0D,QAAQ,MAAM1C,IAAKoB,KAE3D,yBAAKxB,MAAM,YACT,kBAAC+D,EAAD,CAAYzB,MAAO,UAAY0B,QAAW,OAAQC,QAAW,eAAgBC,QAAW,aAAcC,QAAS,SAAU5C,MAAOA,IAChI,kBAACwC,EAAD,CAAYzB,MAAO,WAAY0B,QAAW,IAAKC,QAAW,IAAKC,QAAW,IAAKC,QAAS,KAAM5C,MAAOA,IACrG,kBAAC6C,EAAD,CAAa9B,MAAO,QAAS0B,QAAW,IAAKC,QAAW,IAAKC,QAAW,IAAKC,QAAS,KAAM5C,MAAOA,OAIvG,kBAAC2B,EAAA,EAAMmB,OAAP,KACA,kBAACzB,EAAA,EAAD,CAAQE,QAAQ,OAAO7D,MAAO,CAACE,MAAO,SAAU0D,QAASF,GAAzD,uBACA,kBAACC,EAAA,EAAD,CAAQE,QAAQ,gBAAgB7D,MAAO,CAACE,MAAO,QAASD,gBAAiB,UAAW2D,QAAS,kBAAM,EAAK1B,QAAQmB,EAAOF,EAA0BD,EAA2BZ,EAAOC,KAAnL,qBAQF8C,EAAS,SAAC,GAAuC,IAAtChC,EAAqC,EAArCA,MAAaf,GAAwB,EAA9BgD,KAA8B,EAAxBhD,OAAaC,GAAW,EAAjBgD,KAAiB,EAAXhD,OACzC,OACE,yBAAKxB,MAAM,yCAAyCf,MAAO,CAAEG,OAAQ,UACnE,kBAACyE,EAAA,EAAKC,IAAN,CAAU7E,MAAO,CAAEG,OAAQ,SAAWgB,IAAKoB,IACzC,yBAAKxB,MAAM,aACP,yBAAKA,MAAM,OACT,yBAAKA,MAAM,sBACT,kBAACqC,EAAD,CAASC,MAAQA,EAAOf,MAAOA,EAAOC,MAAOA,KAE/C,yBAAKxB,MAAM,uBACT,kBAAC6D,EAAA,EAAKF,MAAN,CAAY1E,MAAO,CAACwF,UAAW,QAA/B,IAAyClD,KAG3C,kBAACsC,EAAA,EAAKa,KAAN,KACE,wCAAcpC,EAAd,yBAKVyB,EAAa,SAAC,GAAwD,IAAvDzB,EAAsD,EAAtDA,MAAO0B,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAAS5C,EAAW,EAAXA,MAErDoD,EAAc,SAACC,GACP,YAATtC,GACJH,EAA4ByC,EAC5BC,SAASC,eAAe,kBAAkBC,UAAY,IAAM5C,IAI5DC,EAA2BwC,EAC3BC,SAASC,eAAe,gBAAgBC,UAAY3C,GAEtDyC,SAASC,eAAe,gBAAgBC,UAAY,IAAMxD,EAAQY,GAGpE,OACA,yBAAKnC,MAAM,MAAMf,MAAO,CAAC+F,aAAc,SACrC,2BAAI1C,GACF,yBAAKtC,MAAM,2BACX,6BACE,yBAAKA,MAAM,0BACT,yBAAKA,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAAQC,QAAS,kBAAM8B,EAAYX,IAAUjB,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACgG,MAAO,OAAQ/F,gBAAgB,UAAWC,MAAM,SAAU+F,MAAOlB,GAAUA,IAG5J,yBAAKhE,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAAQC,QAAS,kBAAM8B,EAAYV,IAAWlB,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACgG,MAAO,OAAQ/F,gBAAgB,UAAWC,MAAM,SAAU+F,MAAOjB,GAAUA,KAI/J,yBAAKjE,MAAM,+BACP,yBAAKA,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAAQC,QAAS,kBAAM8B,EAAYT,IAAWnB,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACgG,MAAO,OAAQ/F,gBAAgB,UAAWC,MAAM,SAAU+F,MAAOhB,GAAUA,IAG/J,yBAAKlE,MAAM,YACP,kBAAC4C,EAAA,EAAD,CAAQC,QAAS,kBAAM8B,EAAYR,IAAUpB,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACgG,MAAO,OAAQ/F,gBAAgB,UAAWC,MAAM,SAAU+F,MAAOf,GAAUA,QASlKC,EAAc,SAAC,GAAuD,EAAtD9B,MAAsD,EAA/C0B,QAA+C,EAAtCC,QAAsC,EAA7BC,QAA6B,EAApBC,QAAqB,IAAZ5C,EAAW,EAAXA,MAC/D,OACA,yBAAKvB,MAAM,MAAMf,MAAO,CAACwF,UAAW,SAC9B,yBAAKzE,MAAM,0BACT,yBAAKA,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAAQG,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACgE,OAAQ,OAAQgC,MAAO,OAAQ/F,gBAAgB,QAASC,MAAM,QAASQ,UAAW,SAA5H,YAEF,yBAAKK,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAAUG,KAAK,KAAKzD,GAAG,eAAewD,QAAQ,QAAQ7D,MAAO,CAACgE,OAAQ,OAAQgC,MAAO,OAAQ/F,gBAAgB,QAASC,MAAM,QAASQ,UAAW,SAAUuF,MAAO9C,GAA2BA,KAGhM,yBAAKpC,MAAM,+BACP,yBAAKA,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAASG,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACgE,OAAQ,OAAQgC,MAAO,OAAQ/F,gBAAgB,QAASC,MAAM,QAASQ,UAAW,SAA7H,aAGJ,yBAAKK,MAAM,YACP,kBAAC4C,EAAA,EAAD,CAASG,KAAK,KAAKzD,GAAG,iBAAiBwD,QAAQ,QAAQ7D,MAAO,CAACgE,OAAQ,OAAQgC,MAAO,OAAQ/F,gBAAgB,QAASC,MAAM,QAASQ,UAAW,SAAUuF,MAAO/C,GAAlK,IAA+LA,KAGpM,yBAAKnC,MAAM,+BACR,yBAAKA,MAAM,YACT,kBAAC4C,EAAA,EAAD,CAASG,KAAK,KAAKD,QAAQ,QAAQ7D,MAAO,CAACyE,SAAU,OAAQT,OAAQ,OAAQgC,MAAO,OAAQ/F,gBAAgB,QAASC,MAAM,QAASQ,UAAW,SAA/I,UAGJ,yBAAKK,MAAM,YACP,kBAAC4C,EAAA,EAAD,CAASG,KAAK,KAAKzD,GAAG,eAAewD,QAAQ,QAAQ7D,MAAO,CAACyE,SAAU,OAAQT,OAAQ,OAAQgC,MAAO,OAAQ/F,gBAAgB,QAASC,MAAM,QAASQ,UAAW,SAAUuF,MAAO3D,GAAlL,IAA2LA,OAQtM,MAtJa,CAChB,CAAC4D,KAAM,WAAY5D,MAAO,EAAGC,MAAO,6FACpC,CAAC2D,KAAM,wBAAyB5D,MAAO,EAAGC,MAAO,0FAChD,CAAC2D,KAAM,aAAc5D,MAAO,IAAKC,MAAO,4FAmJtC,eAA4B,CAAvB,IAAI4D,EAAI,KACZnD,EAAKP,KACH,yBAAK1B,MAAM,YACT,kBAACsE,EAAD,CAAQhC,MAAO8C,EAAKD,KAAM5D,MAAO6D,EAAK7D,MAAOC,MAAO4D,EAAK5D,UAKjE,cA1JgB,CAChB,CAAC2D,KAAM,SAAU5D,MAAO,EAAGC,MAAO,kFAClC,CAAC2D,KAAM,QAAS5D,MAAO,EAAGC,MAAO,gIACjC,CAAC2D,KAAM,gBAAiB5D,MAAO,EAAGC,MAAO,6FAuJzC,eAA4B,CAAvB,IAAI4D,EAAI,KACXlD,EAAKR,KACD,yBAAK1B,MAAM,YACT,kBAACsE,EAAD,CAAQhC,MAAO8C,EAAKD,KAAM5D,MAAO6D,EAAK7D,MAAOC,MAAO4D,EAAK5D,UAOjE,OACE,yBAAKxC,UAAU,YACb,yBAAKgB,MAAM,aACR,yBAAKhB,UAAU,WACZ,yBAAKgB,MAAM,aACT,yBAAKA,MAAM,+BACPiC,GAEH,yBAAKjC,MAAM,+BACRkC,GAEN,yBAAKlC,MAAM,wC,GA9MHH,aCbdS,G,YAAmB,IAQzB,SAASO,EAAMC,GACbL,aAAaM,QAAQ,WAAWJ,KAAKK,UAAUF,I,IAiLlCuE,E,2MA5KbnE,MAAQ,G,EAcPoE,WAAa,SAACC,EAAOC,GACpBD,EAAME,kBACN,IAAI3E,EAAW,EAAKI,MAAMJ,SAC1BA,EAAS4E,OAAOF,EAAE,GAClB,EAAK3D,SAAS,CAAEf,SAAUA,IAC1BD,EAAMC,GAEN,EAAKtB,MAAMmG,Y,mFAjBX,IAAI5D,EAhBR,WACE,IAAIvB,EAAYC,aAAaC,QAAQ,YAErC,OAAQF,GAAaG,KAAKC,MAAMJ,GAaRD,GACrBhB,KAAKsC,SAEN,CAACf,SAAUiB,GAAmBzB,EAC9B0B,eAAgB,O,+BAiBV,IAAD,OA4CD4D,IAzCOrG,KAAK2B,MAAMJ,UAAYR,GACXuF,OAwCE,SAAC,GAAsC,IAArCzE,EAAoC,EAApCA,SAAUO,EAA0B,EAA1BA,QAAS6D,EAAiB,EAAjBA,EAAGlE,EAAc,EAAdA,SAC7CwE,EAAc,2DAElB,MADgB,yBAAZ1E,IAAuC0E,EAAc,+BAEzD,6BACE,6BACI,6BACA,2BAAI1E,GAAa,6BAFrB,YAGcO,EAAQ,6BAHtB,aAIeL,EAAS,6BAAS,6BAC7B,0CAAgBwE,GAChB,6BACA,6BACA,4BAAQ7G,MAAO,CAAC8G,YAAa,MAAO7G,gBAAiB,QAAS+D,OAAQ,QAASjE,UAAU,aAAa6D,QAAS,SAACmD,GAAD,OAAO,EAAKV,WAAWU,EAAER,KAAI,2BAAI,eAQjJlB,EAAS,SAAC,GAAoD,IAAnDkB,EAAkD,EAAlDA,EAAGpE,EAA+C,EAA/CA,SAAUO,EAAqC,EAArCA,QAASL,EAA4B,EAA5BA,SAAUM,EAAkB,EAAlBA,MAAOJ,EAAW,EAAXA,MACvD,OACE,6BACE,yBAAKxB,MAAM,yCAAyCf,MAAO,CAAEG,OAAQ,UACrE,yBAAKY,MAAM,OACT,yBAAKA,MAAM,YAAW,kBAAC6D,EAAA,EAAKC,IAAN,CAAUhB,QAAQ,MAAM1C,IAAKoB,EAAOvC,MAAO,CAAEG,OAAQ,UAAW6F,MAAO,YAC7F,yBAAKjF,MAAM,YACT,kBAAC4F,EAAD,CAAoBxE,SAAUA,EAAUO,QAASA,EAAS6D,EAAGA,EAAGlE,SAAUA,KAG5E,yBAAKtB,MAAM,YACT,6BAAS,6BAAS,6BAGlB,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BACxD,kBAAC4C,EAAA,EAAD,CAAQ3D,MAAO,CAACgG,MAAO,QAASvB,SAAU,OAAQ/D,UAAW,QAAST,gBAAiB,QAASC,MAAO,QAAS8D,OAAQ,OAAQgD,aAAc,QAA9I,IAAwJrE,QA6B1JsE,EAAa,EACbC,EAAe,GAGnB,QAA2BC,GAAvB7G,KAAK2B,MAAMJ,SACf,IAAK,IAAI0E,EAAI,EAAGA,EAAIjG,KAAK2B,MAAMJ,SAAS+E,OAAQL,IAAK,CAEnD,IAAIa,EAAO9G,KAAK2B,MAAMJ,SAAS0E,GAC/BW,EAAazE,KACX,6BACI,yBAAK1B,MAAM,aACT,kBAACsE,EAAD,CAAQkB,EAAIA,EAAGpE,SAAUiF,EAAKjF,SAAUO,QAAS0E,EAAK1E,QAASL,SAAU+E,EAAK/E,SAAUM,MAAOyE,EAAKzE,MAAOJ,MAAO6E,EAAK7E,WAK/H0E,GAA0BG,EAAKzE,MAGjC,OACE,yBAAK5C,UAAU,OACb,yBAAKA,UAAU,UACX,yBAAKgB,MAAM,aACP,yBAAKA,MAAM,YACT,yBAAKA,MAAM,SACPmG,GAEJ,yBAAKnG,MAAM,SACT,mBA/CC,SAAC,GAA6B,IAA5BsG,EAA2B,EAA3BA,UAAWJ,EAAgB,EAAhBA,WAC9B,OACE,yBAAKlG,MAAM,yCAAyCf,MAAO,CAAEG,OAAQ,YACrE,yBAAKY,MAAM,YACV,yBAAKA,MAAM,SAAX,KACA,2BAAG,2BAAG,8CAA4B,6BAClC,yBAAKA,MAAM,UAAX,KACA,yBAAKA,MAAM,SAAX,KACD,uBAAGf,MAAO,CAACyE,SAAU,SAArB,aAAyC4C,EAAzC,OACA,yBAAKtG,MAAM,SAAX,KACA,yBAAKA,MAAM,SACT,uBAAGf,MAAO,CAACyE,SAAU,OAAQ/D,UAAW,UAAxC,IAAqDuG,IAElD,kBAACtD,EAAA,EAAD,CAAQE,QAAQ,KAAK7D,MAAO,CAACgG,MAAO,QAASvB,SAAU,OAAQ/D,UAAW,SAAUT,gBAAiB,SAAUC,MAAO,QAAS8D,OAAQ,kBAAmBgD,aAAc,MAAOM,WAAY,SAA3L,gBAkCS,CAAYL,WAAaA,EAAYI,UAAaH,EAAaN,kB,GApK7DhG,aCEtB,SAASgB,EAAM2F,GACb/F,aAAaM,QAAQ,QAAQJ,KAAKK,UAAUwF,IAG9C,IAAIC,EAbJ,WACE,IAAID,EAAQ/F,aAAaC,QAAQ,SAIjC,OAHI8F,EAAQ,GACV3F,EAAM,GAEA2F,GAAS7F,KAAKC,MAAM4F,GAQbjG,GAqDFmG,E,2MAjDbxF,MAAQ,CACNsF,MAAOC,GAtBW,G,EA2BtBE,eAAiB,WAGf9F,EAFA4F,GAA0B,GAG1BG,QAAQC,IAAI,QAAU,EAAK3F,MAAMsF,OACjC,EAAK3E,UAAS,SAACX,GACb,MAAO,CAACsF,MAAQ,EAAKtF,MAAMsF,MAAQ,O,EAMvCM,eAAiB,WAGfjG,EAFA4F,GAAwB,GAGA,GAApB,EAAKvF,MAAMsF,QACX,EAAKtF,MAAMsF,MAAQ,GACrB,EAAK3E,UAAS,SAACX,GACf,MAAO,CAACsF,MAAO,MAGjB,EAAK3E,UAAS,SAACX,GACb,MAAO,CAACsF,MAAO,EAAKtF,MAAMsF,MAAQ,Q,wEAK5B,IAAD,OACP,OACE,yBAAKxH,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYY,cAAeL,KAAK2B,MAAMsF,QACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,KAAK,0BAA0BC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,SAC7D,kBAAC,IAAD,CAAOF,KAAK,+BAA+BC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,CAAOnF,SAAU,EAAK6E,oBACxF,kBAAC,IAAD,CAAOI,KAAK,iCAAiCC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,CAAStB,SAAU,EAAKmB,2B,GA5CpFjH,aCZEqH,QACW,cAA7BC,OAAO1H,SAAS2H,UAEe,UAA7BD,OAAO1H,SAAS2H,UAEhBD,OAAO1H,SAAS2H,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAAS1C,SAASC,eAAe,SD4H3C,kBAAmB0C,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b63ca24e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Card, Button, Modal, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport \"./nav.css\";\n\n\nclass Navigation extends Component {\nrender () {\n  return (\n    <div className=\"navigation\">\n      <nav className=\"navbar navbar-expand-lg\" style={{backgroundColor: \"orange\", color: \"white\", height: \"4rem\"}}>\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/ReactMultiPageWebsite\" style={{color: \"white\"}}>\n           <b> Bun-Bun Bake Shop</b>\n          </Link>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li\n                className={`nav-item  ${\n                  this.props.location.pathname === \"/ReactMultiPageWebsite\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link className=\"nav-link\" to=\"/ReactMultiPageWebsite\" style={{color: \"white\"}}>\n                  Home\n                  <span className=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              <li\n                className={`nav-item  ${\n                  this.props.location.pathname === \"/ReactMultiPageWebsite/about\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link  className=\"nav-link\" to=\"/ReactMultiPageWebsite/about\" style={{color: \"white\"}}>\n                  Products\n                </Link>\n              </li>\n              <li \n                className={`nav-item  ${\n                  this.props.location.pathname === \"/ReactMultiPageWebsite/contact\" ? \"active\" : \"\"\n                }`}\n              >\n  \n                <Link className=\"nav-link\" to=\"/ReactMultiPageWebsite/contact\" style={{color: \"white\"}}>\n                  Shopping Cart <span className=\"dot\" style={{textAlign:\"center\"}}>{this.props.cartItemCount}</span>\n\n                </Link>\n \n              </li>\n\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n}\n\nexport default withRouter(Navigation);\n","import React from \"react\";\nimport { Carousel, Button, Modal } from \"react-bootstrap\";\n\nfunction Home() {\n\n  //Create a caresoual and about me section\n  return (\n    <div className=\"home\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-3\">\n          <div class=\"col-12\">\n            <Carousel>\n            \n              <Carousel.Item interval={2000}>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"https://images-gmi-pmc.edge-generalmills.com/165f3d2f-0610-40a6-abf8-478fb850be7c.jpg\"\n                  alt=\"Third slide\"\n                  style={{ height: '36rem'}}\n                />\n\n              </Carousel.Item>\n              <Carousel.Item interval={2000}>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"https://www.tastesoflizzyt.com/wp-content/uploads/2020/07/blueberry-blackberry-pie-1200-2.jpg\"\n                  alt=\"Third slide\"\n                   style={{ height: '36rem'}}\n                />\n\n            \n              </Carousel.Item>\n\n                <Carousel.Item interval={2000}>\n                <img \n                  className=\"d-block w-100\"\n                  src=\"https://natashaskitchen.com/wp-content/uploads/2014/11/Cinnamon-Apple-Pie-6-500x375.jpg\"\n                  alt=\"First slide\"\n                  style={{ height: '36rem'}}\n                />\n      \n              </Carousel.Item>\n</Carousel>\n          </div>\n          </div>\n          <div class=\"row align-items-center my-2\">\n          <div class=\"col-12\">\n            <h1 class=\"font-weight-light\">About Us</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n          </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default Home;\n","import React, {Component} from \"react\";\nimport { Card, Button, Modal, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\n\nconst default_todoList = [];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n}\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\nlet loaded_todoList = load()\n\nclass About extends Component {\n  state = {};\n\n  componentDidMount() {\n    let loaded_todoList = load()\n     this.setState(\n    //Using || backup assignment\n    {todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n    });\n  }\n\n  //Function to add item to local storage\n  addItem = (foodType, myGlazing, quantity, price, image) => {\n    let todoList = this.state.todoList;\n    //Calculate price\n    var myTotal = price * quantity;\n    todoList.push({foodType: foodType, glazing:myGlazing, quantity:quantity, total:myTotal, image: image})\n    this.setState({ todoList: todoList });\n    store(todoList)\n    //Call the function to increase count inside of addItem to todo list \n    this.props.increase()\n  };\n\n  render() \n  {\n  //Information for each bun-bun item\n  let row1Names = [\n  {type: \"Original\", price: 1, image: \"https://www.faithfullyglutenfree.com/wp-content/uploads/2011/01/Cinnamon-Buns-2181483.jpg\"}, \n  {type: \"Original; Gluten-Free\", price: 2, image: \"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\"},\n   {type: \"Blackberry\", price: 1.5, image: \"https://kristineskitchenblog.com/wp-content/uploads/2018/05/blackberry-pie-700-0066.jpg\"}];\n  let row2Names = [\n  {type: \"Walnut\", price: 3, image: \"https://www.bearnakedfood.com/wp-content/uploads/2018/05/DSCF1980-800x1200.jpg\"}, \n  {type: \"Pecan\", price: 2, image: \"https://images.ctfassets.net/uw7yiu2kuigc/4BjBKP0HEN9htyhktAiWa0/8e9fa4d10df96a36525af327c243b65d/Classic-Pecan-Pie-Lead.jpg\"}, \n  {type: \"Pumpkin Spice\", price: 1, image: \"https://tastesbetterfromscratch.com/wp-content/uploads/2015/10/Pumpkin-Pie-5-500x500.jpg\"}];\n  let row1 = [];\n  let row2 = [];\n\n  //Default value for each bun-bun item\n  let customerChoiceForQuantity = \"1\";\n  let customerChoiceForGlazing = \"None\";\n\n  \n//Pop-up modal component\n  const MyModal = ({title, price, image}) => { \n    const [show, setShow] = React.useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const customerChoice = []\n\n    return (\n      <div>\n        <Button class=\"titleButtons\" onClick={handleShow} variant=\"light\" size=\"lg\" style={{backgroundColor: \"white\", color:\"black\", paddingLeft: 0,  border: \"none\"}}><u>{title}</u></Button> \n         <Modal show={show} onHide={handleClose} backdrop=\"static\"  animation={true}  size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n           <Modal.Header closeButton style={{backgroundColor: \"orange\", color: \"white\", fontSize: \"large\"}}>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n           <div class=\"row\"> \n            <div class=\"col-lg-7\">\n              <Card.Img style={{ height: '28rem' }} variant=\"top\" src={image}/>\n            </div>\n            <div class=\"col-lg-5\">\n              <ButtonType title={\"Glazing\"}  button1 = {\"None\"} button2 = {\"Vanilla-Milk\"} button3 = {\"Sugar-Milk\"} button4={\"Double\"} price={price}/>\n              <ButtonType title={\"Quantity\"} button1 = {\"1\"} button2 = {\"2\"} button3 = {\"6\"} button4={\"12\"} price={price}/>\n              <ButtonType1 title={\"Order\"} button1 = {\"1\"} button2 = {\"2\"} button3 = {\"6\"} button4={\"12\"} price={price}/>\n            </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"link\" style={{color: \"black\"}} onClick={handleClose}> Continue Browsing </Button>\n          <Button variant=\"outline-light\" style={{color: \"white\", backgroundColor: \"orange\"}} onClick={() => this.addItem(title, customerChoiceForGlazing, customerChoiceForQuantity, price, image)}> Add to Cart </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    );\n  }\n\n//Card component\n  const MyCard = ({title, text, price, link, image}) => {\n    return (\n      <div class=\"shadow card border-dark mb-3 rounded-0\" style={{ height: '32rem' }}>\n        <Card.Img style={{ height: '24rem' }} src={image} />\n          <div class=\"card-body\">   \n              <div class=\"row\">  \n                <div class=\"col-lg-9 text-left\">\n                  <MyModal title ={title} price={price} image={image}/>\n                </div>\n                <div class=\"col-lg-3 text-right\">  \n                  <Card.Title style={{marginTop: \"5px\"}}>${price}</Card.Title>\n                </div>\n              </div>\n                <Card.Text>\n                  <i>Made with {title} and fluffy dough</i>\n                </Card.Text>\n              </div>\n      </div>);}\n\n  const ButtonType = ({title, button1, button2, button3, button4, price}) => { \n       //Update value of customer choice for glazing/quantity based on customer choice\n       const updateValue = (someValue) => {\n        if (title == \"Quantity\") {\n        customerChoiceForQuantity = someValue;\n        document.getElementById(\"currentQuatity\").innerHTML = \"x\" + customerChoiceForQuantity;\n\n      }\n      else {\n        customerChoiceForGlazing = someValue;\n        document.getElementById(\"currentGlaze\").innerHTML = customerChoiceForGlazing;\n      }\n      document.getElementById(\"currentTotal\").innerHTML = \"$\" + price * customerChoiceForQuantity;\n    }\n   \n    return (\n    <div class=\"row\" style={{marginBottom: \"20px\"}}>\n      <p>{title}</p>\n        <div class=\"row align-items-center\"></div>\n        <div>\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button onClick={() => updateValue(button1)} size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"#FEBA4F\", color:\"white\"}} value={button1}>{button1}</Button> \n            </div>\n\n            <div class=\"col-lg-6\">\n              <Button onClick={() => updateValue(button2)}  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"#FEBA4F\", color:\"white\"}} value={button2}>{button2}</Button>\n            </div>\n          </div>\n         \n          <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button onClick={() => updateValue(button3)}  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"#FEBA4F\", color:\"white\"}} value={button3}>{button3}</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button onClick={() => updateValue(button4)} size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"#FEBA4F\", color:\"white\"}} value={button4}>{button4}</Button>\n            </div>\n          </div>\n        </div>\n      </div>);\n  }\n\n\n  //Update buttons for displaying glazing, quantity and total\n  const ButtonType1 = ({title, button1, button2, button3, button4, price}) => { \n    return (\n    <div class=\"row\" style={{marginTop: \"80px\"}}>\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button size=\"sm\" variant=\"light\" style={{border: \"none\", width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Glazing</Button>\n            </div>\n            <div class=\"col-lg-6\">\n              <Button   size=\"sm\" id=\"currentGlaze\" variant=\"light\" style={{border: \"none\", width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={customerChoiceForGlazing}>{customerChoiceForGlazing}</Button>\n            </div>\n          </div>\n          <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button  size=\"sm\" variant=\"light\" style={{border: \"none\", width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Quantity</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button  size=\"sm\" id=\"currentQuatity\" variant=\"light\" style={{border: \"none\", width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={customerChoiceForQuantity}>x{customerChoiceForQuantity}</Button>\n            </div>\n          </div>\n           <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button  size=\"sm\" variant=\"light\" style={{fontSize: \"22px\", border: \"none\", width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Total</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button  size=\"sm\" id=\"currentTotal\" variant=\"light\" style={{fontSize: \"22px\", border: \"none\", width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={price}>${price}</Button>\n            </div>\n          </div>\n          </div>\n          );\n      }\n\n    //For loop to generate card component for each item\n     for (let name of row1Names) {\n      row1.push(\n        <div class=\"col-lg-4\">\n          <MyCard title={name.type} price={name.price} image={name.image}/>\n        </div>\n        );\n      }\n\n  for (let name of row2Names) {\n    row2.push(\n        <div class=\"col-lg-4\">\n          <MyCard title={name.type} price={name.price} image={name.image}/>\n        </div>\n        );\n      }\n\n\n  let list_content = [];\n  return (\n    <div className=\"products\">\n      <div class=\"container\">\n         <div className=\"contact\">\n            <div class=\"container\">\n              <div class=\"row align-items-center my-4\">    \n                 {row1}\n              </div>\n               <div class=\"row align-items-center my-4\">    \n                 {row2}\n              </div>\n            <div class=\"row align-items-center my-5\"></div> \n        </div>\n      </div>\n   </div>\n  </div>);}}\n\nexport default About;\n","import React, {Component} from \"react\";\nimport { Card, Button, Modal, Dropdown, DropdownButton, ButtonGroup } from \"react-bootstrap\";\n\n\nconst default_todoList = [];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n  }\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\nclass Contact extends Component { \n \n  state = {\n  };\n\n componentDidMount() {\n    let loaded_todoList = load()\n     this.setState(\n    //Using || backup assignment\n    {todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n    }\n  );\n  }\n\n  //Function to Remove item from Cart \n   deleteItem = (event, i) => {\n    event.stopPropagation()\n    let todoList = this.state.todoList;\n    todoList.splice(i,1)\n    this.setState({ todoList: todoList });\n    store(todoList)\n    //Function which decrements the count in App.js\n    this.props.decrease()\n  };\n\n\nrender() {\n\n\nlet todoList = this.state.todoList || default_todoList;\nlet itemsInList = todoList.length || 0;\nlet buttonCount = 0\n\n\n  //Drop down Component\n  const MyDropDowns = ({activeQuantity}) => { \n    let quantityValues = [1, 2, 6, 12]\n    let buttonArray = []\n\n\n\n    const change = (x) => {\n      activeQuantity = x\n      console.log(document.getElementById(x).parentNode);\n     \n    }\n\n\n\n    for (let index in quantityValues) {\n    //Make the active dropdown button the current chosen dropdown \n    if (quantityValues[index] == activeQuantity) { buttonArray.push( <Dropdown.Item id={index} eventKey=\"quantityValues[index]\" onClick={() => change(quantityValues[index])} active>{quantityValues[index]}</Dropdown.Item>)}\n    else {\n      buttonArray.push(\n        <Dropdown.Item id={index} eventKey=\"quantityValues[index]\" onClick={() => change(quantityValues[index])}>{quantityValues[index]}</Dropdown.Item>\n        )\n      }\n    }\n\n    return (\n    <Dropdown as={ButtonGroup}>\n      <Dropdown.Toggle style={{width: \"120px\", textAlign: \"right\", backgroundColor: \"white\", color: \"black\", border: \"1px solid black\", borderRadius: \"2px\"}}>{activeQuantity}</Dropdown.Toggle>\n      <Dropdown.Menu a>\n        {buttonArray}\n      </Dropdown.Menu>\n\n  </Dropdown>\n    )}\n\n\n  const ProductDescription = ({foodType, glazing, i, quantity}) => {\n    let description = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n    if (foodType == \"Original; Gluten-Free\") { description = \"Lorem ipsum dolor sit amet.\" }\n    return(\n    <div>\n      <div>\n          <br></br>\n          <b>{foodType}</b><br></br>\n          Glazing: {glazing}<br></br>\n          Quantity: {quantity}<br></br><br></br>\n          <i>Description:{description}</i>\n          <br></br>\n          <br></br>\n          <button style={{marginRight: \"0px\", backgroundColor: \"white\", border: \"none\"}} className=\"DeleteIcon\" onClick={(e) => this.deleteItem(e,i)}><u>{\"Remove\"}</u></button>\n       \n          \n      </div> \n\n    </div>)}\n\n   //Component for Checkout card\n   const MyCard = ({i, foodType, glazing, quantity, total, image}) => {\n    return (\n      <div>\n        <div class=\"shadow card border-dark mb-3 rounded-0\" style={{ height: '18rem'}}>\n        <div class=\"row\">\n          <div class=\"col-lg-5\"><Card.Img variant=\"top\" src={image} style={{ height: '17.9rem', width: \"18rem\" }}/></div> \n          <div class=\"col-lg-4\">\n            <ProductDescription foodType={foodType} glazing={glazing} i={i} quantity={quantity}/>\n          </div>  \n\n          <div class=\"col-lg-2\">  \n            <br></br><br></br><br></br>\n\n\n            <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n          <Button style={{width: \"120px\", fontSize: \"20px\", textAlign: \"right\", backgroundColor: \"white\", color: \"black\", border: \"none\", borderRadius: \"2px\"}}>${total}</Button>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n\n\n//Checkout total Component\n  const MyCheckout = ({itemCount, finalTotal}) => {\n    return (\n      <div class=\"shadow card border-dark mb-3 rounded-0\" style={{ height: '10.5rem'}}>\n      <div class=\"row my-3\">\n       <div class=\"col-1\"> </div>\n       <b><u><p>Order Summary</p></u></b><br></br>\n       <div class=\"col-12\"> </div>\n       <div class=\"col-1\"> </div>\n      <p style={{fontSize: \"20px\"}}>Subtotal ({itemCount}): </p>\n      <div class=\"col-4\"> </div>\n      <div class=\"col-3\"> \n        <p style={{fontSize: \"20px\", textAlign: \"right\"}} >${finalTotal}</p>\n      </div>\n           <Button variant=\"lg\" style={{width: \"320px\", fontSize: \"20px\", textAlign: \"center\", backgroundColor: \"orange\", color: \"white\", border: \"1px solid black\", borderRadius: \"2px\", marginLeft: \"30px\"}}>Checkout</Button>\n      </div>\n      </div>\n      );\n  }\n\n    let finalTotal = 0;\n    let list_content = [];\n\n    //Make sure the item list is not undefined \n    if (this.state.todoList != undefined){\n    for (let i = 0; i < this.state.todoList.length; i++) {\n      //Loop through each item for checkout\n      let todo = this.state.todoList[i];\n      list_content.push(\n        <div>\n            <div class=\"col-lg-12\">\n              <MyCard i ={i} foodType={todo.foodType} glazing={todo.glazing} quantity={todo.quantity} total={todo.total} image={todo.image}/>\n          </div>\n        </div>\n\n      );\n      finalTotal = finalTotal + todo.total}\n    }\n      \n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n            <div class=\"container\">\n                <div class=\"row my-3\">\n                  <div class=\"col-8\">\n                     {list_content}\n                  </div>\n                  <div class=\"col-4\">\n                    <MyCheckout finalTotal= {finalTotal} itemCount = {list_content.length} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default Contact;","import React, {Component} from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Home, About, Contact } from \"./components\";\n\n//Default count for shopping cart \nconst default_count = 0\n\n\n//Load count from local storage\nfunction load(){\n  let count = localStorage.getItem('count')\n  if (count < 0) {\n    store(0)\n  }\n  return (count && JSON.parse(count)) \n}\n\n//store count from local storage\nfunction store(count){\n  localStorage.setItem('count',JSON.stringify(count))\n}\n\nlet load_count = load()\n\nclass App extends Component {\n\n  state = {\n    count: load_count || default_count\n  };\n\n\n//Function which increases count\nincrementCount = () => {\n  load_count = load_count + 1;\n  //Store updated count in local storage\n  store(load_count)\n  console.log(\"There\" + this.state.count)\n  this.setState((state) => {\n    return {count: (this.state.count + 1)}\n  });\n\n}\n\n//Function which decreases count\ndecrementCount = () => {\n  load_count = load_count-1;\n  //Store updated count in local storage\n  store(load_count)\n  if (this.state.count == 0) {return }\n  if (this.state.count < 0) { \n    this.setState((state) => {\n    return {count: 0}\n  });}\n\n  this.setState((state) => {\n    return {count: this.state.count - 1}\n  });\n}\n\n//Route to the different pages\nrender() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation cartItemCount={this.state.count}/>\n        <Switch>\n          <Route path=\"/ReactMultiPageWebsite/\" exact component={() => <Home />} />\n          <Route path=\"/ReactMultiPageWebsite/about\" exact component={() => <About increase={this.incrementCount}/>} />\n          <Route path=\"/ReactMultiPageWebsite/contact\" exact component={() => <Contact decrease={this.decrementCount} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}