{"version":3,"sources":["components/Navigation.jsx","components/Home.jsx","components/About.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["default_todoList","loaded_todoList","str_todos","localStorage","getItem","JSON","parse","load","Navigation","state","todoList","newTodoContent","itemsInList","this","length","className","class","style","backgroundColor","color","to","id","props","location","pathname","onClick","window","reload","textAlign","Component","withRouter","Home","src","alt","store","setItem","stringify","About","toggleDone","evt","i","finished","setState","addItem","foodType","myGlazing","quantity","price","myTotal","push","glazing","total","deleteItem","event","stopPropagation","splice","row1","row2","customerChoiceForQuantity","customerChoiceForGlazing","MyModal","title","React","useState","show","setShow","handleClose","Button","variant","size","padding","textDecoration","Modal","onHide","backdrop","animation","aria-labelledby","centered","Header","closeButton","fontSize","Title","Body","Card","Img","height","ButtonType","button1","button2","button3","button4","ButtonType1","Footer","MyCard","text","link","Text","updateValue","someValue","console","log","document","getElementById","innerHTML","width","value","name","Contact","content","list_content","todo","e","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0412bf1.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Card, Button, Modal, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport \"./nav.css\";\n\n\n const default_todoList = [\n];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n}\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\nlet loaded_todoList = load()\n\nclass Navigation extends Component {\n     state = {\n    //Using || backup assignment\n    todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n\n  };\n\n\nrender () {\n\nlet todoList = this.state.todoList;\nlet itemsInList = todoList.length\n\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar navbar-expand-lg\" style={{backgroundColor: \"orange\", color: \"white\"}}>\n        <div class=\"container\">\n          <Link class=\"navbar-brand\" to=\"/\" style={{color: \"white\"}}>\n            Bun-Bun Bake Shop\n          </Link>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto\">\n              <li\n                class={`nav-item  ${\n                  this.props.location.pathname === \"ReactMultiPageWebsite/\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/\" style={{color: \"white\"}}>\n                  Home\n                  <span class=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  this.props.location.pathname === \"ReactMultiPageWebsite/about\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link  class=\"nav-link\" to=\"ReactMultiPageWebsite/about\" style={{color: \"white\"}}>\n                  Products\n                </Link>\n              </li>\n              <li onClick= {() => window.location.reload(true)}\n                class={`nav-item  ${\n                  this.props.location.pathname === \"ReactMultiPageWebsite/contact\" ? \"active\" : \"\"\n                }`}\n              >\n  \n                <Link class=\"nav-link\" to=\"/contact\" style={{color: \"white\"}}>\n                  Shopping Cart   <span class=\"dot\" style={{textAlign:\"center\"}}>{itemsInList}</span>\n\n                </Link>\n \n                \n              </li>\n\n      \n\n          \n\n\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n}\n\nexport default withRouter(Navigation);\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-12\">\n            <img\n              class=\"img-fluid rounded mb-5 mb-lg-0\"\n              src=\"http://placehold.it/2000x600\"\n              alt=\"\"\n            />\n          </div>\n          </div>\n          <div class=\"row align-items-center my-5\">\n          <div class=\"col-12\">\n            <h1 class=\"font-weight-light\">Home</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n          </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default Home;\n","import React, {Component} from \"react\";\nimport { Card, Button, Modal, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\n\n\n\n const default_todoList = [\n];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n}\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\nlet loaded_todoList = load()\n\n\n\nclass About extends Component {\n   state = {\n    //Using || backup assignment\n    todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n\n  };\n\n   toggleDone = (evt, i) => {\n    let todoList = this.state.todoList;\n    todoList[i].finished = !todoList[i].finished;\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n  addItem = (foodType, myGlazing, quantity, price) => {\n    //TODO 1: Make the add button work (hint: this.setState())\n    let todoList = this.state.todoList;\n    var myTotal = price * quantity;\n    todoList.push({foodType: foodType, glazing:myGlazing, quantity:quantity, total:myTotal})\n    this.setState({ todoList: todoList });\n    store(todoList)\n    window.location.reload(true);\n  };\n  deleteItem = (event, i) => {\n    //TODO 2: Make the delete button work (hint: event.stopPropagation())\n    event.stopPropagation()\n    let todoList = this.state.todoList;\n    todoList.splice(i,1)\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n\n\n\n\n  render() \n\n  {\n\n  let row1Names = [\"Original\", \"Original; Gluten-Free\", \"Blackberry\"];\n  let row2Names = [\"Walnut\", \"Pecan\", \"Pumpkin Spice\"];\n  let row1 = [];\n  let row2 = [];\n\n\n  let customerChoiceForQuantity = \"1\";\n  let customerChoiceForGlazing = \"None\";\n\n\n\n  const MyModal = ({title, price}) => { \n    const [show, setShow] = React.useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const customerChoice = []\n \n\n\n    return (\n      <div>\n        <Button onClick={handleShow} variant=\"light\" size=\"lg\" style={{backgroundColor: \"white\", color:\"black\", padding: 0, textDecoration: \"none\"}}><u>{title}</u></Button> \n\n         <Modal show={show} onHide={handleClose} backdrop=\"static\"  animation={true}  size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n           <Modal.Header closeButton style={{backgroundColor: \"orange\", color: \"white\", fontSize: \"large\"}}>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n           <div class=\"row\"> \n\n            <div class=\"col-lg-7\">\n              <Card.Img style={{ height: '28rem' }} variant=\"top\" src=\"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\" />\n            </div>\n\n            <div class=\"col-lg-5\">\n              <ButtonType title={\"Glazing\"}  button1 = {\"None\"} button2 = {\"Vanilla-Milk\"} button3 = {\"Sugar-Milk\"} button4={\"Double\"} price={price}/>\n              <ButtonType title={\"Quantity\"} button1 = {\"1\"} button2 = {\"2\"} button3 = {\"6\"} button4={\"12\"} price={price}/>\n\n              <ButtonType1 title={\"Order\"} button1 = {\"1\"} button2 = {\"2\"} button3 = {\"6\"} button4={\"12\"} price={price}/>\n            </div>\n      </div>\n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" style={{color: \"black\"}} onClick={handleClose}> Continue Browsing </Button>\n          <Button variant=\"outline-light\" style={{color: \"white\", backgroundColor: \"orange\"}} onClick={() => this.addItem(title, customerChoiceForGlazing, customerChoiceForQuantity, price)}> Add to Cart </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    );\n  }\n\n\n\n  const MyCard = ({title, text, price, link}) => {\n    return (\n      <div class=\"shadow card border-dark mb-3 rounded-0\" style={{ height: '32rem' }}>\n        <Card.Img style={{ height: '24rem' }} variant=\"top\" src=\"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\" />\n          <div class=\"card-body\">\n              <div class=\"row align-items-center\">  \n                <div class=\"col-lg-10 align-items-center\"><MyModal title ={title} price={price}/></div>\n                <div class=\"col-lg-2 align-items-center\">  \n                  <Card.Title>${price}</Card.Title>\n                </div>\n       \n              </div>\n                <Card.Text>\n                  <i>Made with {title} and fluffy dough</i>\n                </Card.Text>\n              </div>\n      </div>);\n  }\n\n  const ButtonType = ({title, button1, button2, button3, button4, price}) => { \n\n       const updateValue = (someValue) => {\n        if (title == \"Quantity\") {\n        customerChoiceForQuantity = someValue;\n        console.log(\"Quantity: \" + customerChoiceForQuantity)\n        document.getElementById(\"currentQuatity\").innerHTML = \"x\" + customerChoiceForQuantity;\n\n      }\n      else {\n        customerChoiceForGlazing = someValue;\n        console.log(\"Glazing: \" + customerChoiceForGlazing);\n        document.getElementById(\"currentGlaze\").innerHTML = customerChoiceForGlazing;\n      }\n      document.getElementById(\"currentTotal\").innerHTML = \"$\" + price * customerChoiceForQuantity;\n    }\n\n\n   \n    return (\n    <div class=\"row\">\n      <p>{title}</p>\n        <div class=\"row align-items-center\"></div>\n        <div>\n\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button onClick={() => updateValue(button1)} size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button1}>{button1}</Button>\n\n            </div>\n\n            <div class=\"col-lg-6\">\n              <Button onClick={() => updateValue(button2)}  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button2}>{button2}</Button>\n            </div>\n          </div>\n         \n          <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button onClick={() => updateValue(button3)}  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button3}>{button3}</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button onClick={() => updateValue(button4)} size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button4}>{button4}</Button>\n            </div>\n          </div>\n\n\n          </div>\n          </div>\n\n          );\n      }\n\n\n\n  const ButtonType1 = ({title, button1, button2, button3, button4, price}) => { \n   \n    return (\n    <div class=\"row\">\n      <p>{title}</p>\n\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Glazing</Button>\n\n            </div>\n\n            <div class=\"col-lg-6\">\n              <Button   size=\"sm\" id=\"currentGlaze\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={customerChoiceForGlazing}>{customerChoiceForGlazing}</Button>\n            </div>\n          </div>\n         \n          <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Quantity</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button  size=\"sm\" id=\"currentQuatity\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={customerChoiceForQuantity}>x{customerChoiceForQuantity}</Button>\n            </div>\n          </div>\n\n\n           <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Total</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button  size=\"sm\" id=\"currentTotal\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={price}>${price}</Button>\n            </div>\n          </div>\n\n          </div>\n\n          );\n      }\n\n\n\n    \n\n     for (let name of row1Names) {\n    row1.push(\n        <div class=\"col-lg-4\">\n          <MyCard title={name} price={\"1\"}/>\n        </div>\n        );\n      }\n\n  for (let name of row2Names) {\n    row2.push(\n        <div class=\"col-lg-4\">\n          <MyCard title={name} price={\"1\"}/>\n        </div>\n        );\n      }\n\n  \n\n\n    let list_content = [];\n\n\n\n    console.log(this.state.todoList)\n\n  return (\n    <div className=\"about\">\n      <div class=\"container\">\n         <div className=\"contact\">\n\n            <div class=\"container\">\n      \n              <div class=\"row align-items-center my-4\">    \n                 {row1}\n              </div>\n              \n               <div class=\"row align-items-center my-4\">    \n                 {row2}\n                </div>\n\n        <div class=\"row align-items-center my-5\"></div> \n\n        </div>\n\n    </div>\n\n   </div>\n\n    </div>\n\n\n\n\n  );\n}\n}\n\nexport default About;\n","import React, {Component} from \"react\";\nimport { Card, Button, Modal } from \"react-bootstrap\";\n\n\nconst default_todoList = [];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n  }\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\nfunction Example({title}) {\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div>\n      <Button onClick={handleShow} variant=\"light\" size=\"lg\" style={{backgroundColor: \"white\", color:\"black\", padding: 0}}><u>{title}</u></Button>\n\n      <Modal show={show} onHide={handleClose} animation={true}  size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered>\n        <Modal.Header closeButton style={{backgroundColor: \"orange\", color: \"white\", fontSize: \"large\"}}>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n       \n      <div class=\"row\">    \n        <div class=\"col-lg-7\">\n        <Card.Img style={{ height: '28rem' }} variant=\"top\" src=\"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\" />\n        </div>\n\n        <div class=\"col-lg-5\">\n\n        <div class=\"row\">\n          <p>Glazing</p>\n   \n\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n            \n              <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" onclick={<Example title={\"alia\"}/>} value=\"None\" />\n \n            </div>\n\n            <div class=\"col-lg-6\">\n             <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"Vanilla-Milk\" />{' '}\n            </div>\n            </div>\n\n          <div class=\"row my-2 align-items-center\">\n         <div class=\"col-lg-6\">\n              <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"Sugar-Milk\" />\n            </div>\n\n            <div class=\"col-lg-6\">\n             <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"Double\" />{' '}\n            </div>\n          </div>\n          </div>\n\n  \n\n        <div class=\"row align-items-center my-4\"> <p>Quantity</p>\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"1\" />\n            </div>\n\n            <div class=\"col-lg-6\">\n             <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"2\" />{' '}\n            </div>\n            </div>\n\n          <div class=\"row my-2 align-items-center\">\n         <div class=\"col-lg-6\">\n              <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"6\" />\n            </div>\n\n            <div class=\"col-lg-6\">\n             <Button as=\"input\" size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} type=\"button\" value=\"12\" />{' '}\n            </div>\n          </div>  \n\n \n\n          </div>\n\n        </div>\n   \n        </div>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" style={{color: \"black\"}} onClick={handleClose}>\n            Continue Browsing\n          </Button>\n          <Button variant=\"outline-light\" style={{color: \"white\", backgroundColor: \"orange\"}} onClick={handleClose}>\n            Add to Cart\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nlet loaded_todoList = load()\n\n\nclass Contact extends Component {\n  state = {\n    //Using || backup assignment\n    todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n  };\n\n   toggleDone = (evt, i) => {\n    let todoList = this.state.todoList;\n    todoList[i].finished = !todoList[i].finished;\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n   addItem = () => {\n    //TODO 1: Make the add button work (hint: this.setState())\n    let todoList = this.state.todoList;\n    todoList.push({content: this.state.newTodoContent, finished:false})\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n   deleteItem = (event, i) => {\n    //TODO 2: Make the delete button work (hint: event.stopPropagation())\n    event.stopPropagation()\n    let todoList = this.state.todoList;\n    todoList.splice(i,1)\n    this.setState({ todoList: todoList });\n    store(todoList)\n    window.location.reload(true);\n  };\n\n\n\n\nrender() {\n    console.log(\"rerender\");\n\n    let list_content = [];\n    for (let i = 0; i < this.state.todoList.length; i++) {\n      let todo = this.state.todoList[i];\n      list_content.push(\n        <li>\n          FoodType: {todo.foodType} <br></br>\n          Glazing: {todo.glazing} <br></br>\n          Quantity: {todo.quantity} <br></br>\n          Total: {todo.total} <br></br>\n          <div className=\"Filler\"></div>\n          <button className=\"DeleteIcon\" onClick={(e) => this.deleteItem(e,i)}>\n            {\"x\"}\n          </button>\n        </li>\n      );\n      console.log(todo);\n      }\n      \n\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n          <h5>Checkout Items</h5>\n        </div>\n        <ul>{list_content}</ul>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Footer, Home, About, Contact } from \"./components\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"ReactMultiPageWebsite/\" exact component={() => <Home />} />\n          <Route path=\"ReactMultiPageWebsite/about\" exact component={() => <About />} />\n          <Route path=\"ReactMultiPageWebsite/contact\" exact component={() => <Contact />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}