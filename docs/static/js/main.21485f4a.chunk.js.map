{"version":3,"sources":["components/Navigation.jsx","components/Home.jsx","components/About.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["default_todoList","Navigation","state","please","console","log","props","cartItemCount","loaded_todoList","str_todos","localStorage","getItem","JSON","parse","load","this","setState","todoList","newTodoContent","className","style","backgroundColor","color","to","id","location","pathname","onClick","textAlign","Component","withRouter","Home","class","src","alt","store","setItem","stringify","About","toggleDone","evt","i","finished","addItem","foodType","myGlazing","quantity","price","myTotal","push","glazing","total","increase","deleteItem","event","stopPropagation","splice","row1","row2","customerChoiceForQuantity","customerChoiceForGlazing","MyModal","title","React","useState","show","setShow","handleClose","Button","variant","size","padding","textDecoration","Modal","onHide","backdrop","animation","aria-labelledby","centered","Header","closeButton","fontSize","Title","Body","Card","Img","height","ButtonType","button1","button2","button3","button4","ButtonType1","Footer","MyCard","text","link","myTitle","myPrice","openModal","marginTop","Text","updateValue","someValue","document","getElementById","innerHTML","width","value","type","name","Contact","content","decrease","length","e","list_content","undefined","todo","App","count","incrementCount","decrementCount","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21485f4a.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Card, Button, Modal, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport \"./nav.css\";\n\n\n const default_todoList = [\n];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n}\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\n\nclass Navigation extends Component {\n\n\n\n componentDidMount() {\n    let loaded_todoList = load()\n     this.setState(\n    //Using || backup assignment\n    {todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n    }\n  );\n  }\n\n  state = {\n  };\n\n\n\nplease = () => {\n\n  console.log(\"HERE\" +  this.props.cartItemCount)\n}\n\n\n\nrender () {\n\n\nlet todoList = this.state.todoList || default_todoList;\n  return (\n    <div className=\"navigation\">\n      <nav className=\"navbar navbar-expand-lg\" style={{backgroundColor: \"orange\", color: \"white\"}}>\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\" style={{color: \"white\"}}>\n            Bun-Bun Bake Shop\n          </Link>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li\n                className={`nav-item  ${\n                  this.props.location.pathname === \"/ReactMultiPageWebsite\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link className=\"nav-link\" to=\"/ReactMultiPageWebsite\" style={{color: \"white\"}}>\n                  Home\n                  <span className=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              <li\n                className={`nav-item  ${\n                  this.props.location.pathname === \"/ReactMultiPageWebsite/about\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link  className=\"nav-link\" to=\"/ReactMultiPageWebsite/about\" style={{color: \"white\"}}>\n                  Products\n                </Link>\n              </li>\n              <li \n                className={`nav-item  ${\n                  this.props.location.pathname === \"/ReactMultiPageWebsite/contact\" ? \"active\" : \"\"\n                }`}\n              >\n  \n                <Link onClick={() => this.please()}className=\"nav-link\" to=\"/ReactMultiPageWebsite/contact\" style={{color: \"white\"}}>\n                  Shopping Cart <span className=\"dot\" style={{textAlign:\"center\"}}>{this.props.cartItemCount}</span>\n\n                </Link>\n \n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n}\n\nexport default withRouter(Navigation);\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-12\">\n            <img\n              class=\"img-fluid rounded mb-5 mb-lg-0\"\n              src=\"http://placehold.it/2000x600\"\n              alt=\"\"\n            />\n          </div>\n          </div>\n          <div class=\"row align-items-center my-5\">\n          <div class=\"col-12\">\n            <h1 class=\"font-weight-light\">Home</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n          </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default Home;\n","import React, {Component} from \"react\";\nimport { Card, Button, Modal, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\n\n\n\n const default_todoList = [\n];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n}\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\nlet loaded_todoList = load()\n\n\n\nclass About extends Component {\n  state = {};\n\n  componentDidMount() {\n    let loaded_todoList = load()\n     this.setState(\n    //Using || backup assignment\n    {todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n    }\n  );\n\n  }\n\n   toggleDone = (evt, i) => {\n    let todoList = this.state.todoList;\n    todoList[i].finished = !todoList[i].finished;\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n  addItem = (foodType, myGlazing, quantity, price) => {\n    //TODO 1: Make the add button work (hint: this.setState())\n    let todoList = this.state.todoList;\n    var myTotal = price * quantity;\n    todoList.push({foodType: foodType, glazing:myGlazing, quantity:quantity, total:myTotal})\n    this.setState({ todoList: todoList });\n    store(todoList)\n    //pass some call back as a prop \n    this.props.increase()\n\n    \n  };\n  deleteItem = (event, i) => {\n    //TODO 2: Make the delete button work (hint: event.stopPropagation())\n    event.stopPropagation()\n    let todoList = this.state.todoList;\n    todoList.splice(i,1)\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n\n\n\n\n\n\n  render() \n\n  {\n\n  let row1Names = [{type: \"Original\", price: 1}, {type: \"Original; Gluten-Free\", price: 2}, {type: \"Blackberry\", price: 1.5}];\n  let row2Names = [{type: \"Walnut\", price: 3}, {type: \"Pecan\", price: 2}, {type: \"Pumpkin Spice\", price: 1}];\n  let row1 = [];\n  let row2 = [];\n\n\n  let customerChoiceForQuantity = \"1\";\n  let customerChoiceForGlazing = \"None\";\n\n\n\n  const MyModal = ({title, price}) => { \n    const [show, setShow] = React.useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const customerChoice = []\n \n\n\n    return (\n      <div>\n        <Button onClick={handleShow} variant=\"light\" size=\"lg\" style={{backgroundColor: \"white\", color:\"black\", padding: 0, textDecoration: \"none\"}}><u>{title}</u></Button> \n\n         <Modal show={show} onHide={handleClose} backdrop=\"static\"  animation={true}  size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n           <Modal.Header closeButton style={{backgroundColor: \"orange\", color: \"white\", fontSize: \"large\"}}>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n           <div class=\"row\"> \n\n            <div class=\"col-lg-7\">\n              <Card.Img style={{ height: '28rem' }} variant=\"top\" src=\"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\" />\n            </div>\n\n            <div class=\"col-lg-5\">\n              <ButtonType title={\"Glazing\"}  button1 = {\"None\"} button2 = {\"Vanilla-Milk\"} button3 = {\"Sugar-Milk\"} button4={\"Double\"} price={price}/>\n              <ButtonType title={\"Quantity\"} button1 = {\"1\"} button2 = {\"2\"} button3 = {\"6\"} button4={\"12\"} price={price}/>\n\n              <ButtonType1 title={\"Order\"} button1 = {\"1\"} button2 = {\"2\"} button3 = {\"6\"} button4={\"12\"} price={price}/>\n            </div>\n      </div>\n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" style={{color: \"black\"}} onClick={handleClose}> Continue Browsing </Button>\n          <Button variant=\"outline-light\" style={{color: \"white\", backgroundColor: \"orange\"}} onClick={() => this.addItem(title, customerChoiceForGlazing, customerChoiceForQuantity, price)}> Add to Cart </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    );\n  }\n\n\n  const openModal = ({myTitle, myPrice}) => {\n    console.log(\"Enter here\")\nreturn (\n  <div class=\"col-lg-9 text-left\">\n    <MyModal title ={myTitle} price={myPrice}/>\n  </div>);\n  }\n\n  const MyCard = ({title, text, price, link}) => {\n    return (\n      <div class=\"shadow card border-dark mb-3 rounded-0\" style={{ height: '32rem' }}>\n        <Card.Img style={{ height: '24rem' }}  onClick= {() => openModal(title, price)} src=\"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\" />\n          <div class=\"card-body\">   \n              <div class=\"row\">  \n                <div class=\"col-lg-9 text-left\">\n                  <MyModal title ={title} price={price}/>\n                </div>\n                <div class=\"col-lg-3 text-right\">  \n                  <Card.Title style={{marginTop: \"5px\"}}>${price}</Card.Title>\n                </div>\n              </div>\n\n                <Card.Text>\n                  <i>Made with {title} and fluffy dough</i>\n                </Card.Text>\n              </div>\n      </div>);\n  }\n\n  const ButtonType = ({title, button1, button2, button3, button4, price}) => { \n\n       const updateValue = (someValue) => {\n        if (title == \"Quantity\") {\n        customerChoiceForQuantity = someValue;\n        console.log(\"Quantity: \" + customerChoiceForQuantity)\n        document.getElementById(\"currentQuatity\").innerHTML = \"x\" + customerChoiceForQuantity;\n\n      }\n      else {\n        customerChoiceForGlazing = someValue;\n        console.log(\"Glazing: \" + customerChoiceForGlazing);\n        document.getElementById(\"currentGlaze\").innerHTML = customerChoiceForGlazing;\n      }\n      document.getElementById(\"currentTotal\").innerHTML = \"$\" + price * customerChoiceForQuantity;\n    }\n\n\n   \n    return (\n    <div class=\"row\">\n      <p>{title}</p>\n        <div class=\"row align-items-center\"></div>\n        <div>\n\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button onClick={() => updateValue(button1)} size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button1}>{button1}</Button>\n\n            </div>\n\n            <div class=\"col-lg-6\">\n              <Button onClick={() => updateValue(button2)}  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button2}>{button2}</Button>\n            </div>\n          </div>\n         \n          <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button onClick={() => updateValue(button3)}  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button3}>{button3}</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button onClick={() => updateValue(button4)} size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"orange\", color:\"white\"}} value={button4}>{button4}</Button>\n            </div>\n          </div>\n\n\n          </div>\n          </div>\n\n          );\n      }\n\n\n\n  const ButtonType1 = ({title, button1, button2, button3, button4, price}) => { \n   \n    return (\n    <div class=\"row\">\n      <p>{title}</p>\n\n          <div class=\"row align-items-center\">\n            <div class=\"col-lg-6\">\n              <Button size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Glazing</Button>\n\n            </div>\n\n            <div class=\"col-lg-6\">\n              <Button   size=\"sm\" id=\"currentGlaze\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={customerChoiceForGlazing}>{customerChoiceForGlazing}</Button>\n            </div>\n          </div>\n         \n          <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Quantity</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button  size=\"sm\" id=\"currentQuatity\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={customerChoiceForQuantity}>x{customerChoiceForQuantity}</Button>\n            </div>\n          </div>\n\n\n           <div class=\"row my-2 align-items-center\">\n              <div class=\"col-lg-6\">\n                <Button  size=\"sm\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"left\"}}>Total</Button>\n              </div>\n\n            <div class=\"col-lg-6\">\n                <Button  size=\"sm\" id=\"currentTotal\" variant=\"light\" style={{width: \"9rem\", backgroundColor:\"white\", color:\"black\", textAlign: \"right\"}} value={price}>${price}</Button>\n            </div>\n          </div>\n\n          </div>\n\n          );\n      }\n\n\n\n    \n\n     for (let name of row1Names) {\n      row1.push(\n        <div class=\"col-lg-4\">\n          <MyCard title={name.type} price={name.price}/>\n        </div>\n        );\n      }\n\n  for (let name of row2Names) {\n    row2.push(\n        <div class=\"col-lg-4\">\n          <MyCard title={name.type} price={name.price}/>\n        </div>\n        );\n      }\n\n  \n\n\n    let list_content = [];\n\n\n\n    console.log(this.state.todoList)\n\n  return (\n    <div className=\"about\">\n      <div class=\"container\">\n         <div className=\"contact\">\n\n            <div class=\"container\">\n      \n              <div class=\"row align-items-center my-4\">    \n                 {row1}\n              </div>\n              \n               <div class=\"row align-items-center my-4\">    \n                 {row2}\n                </div>\n\n        <div class=\"row align-items-center my-5\"></div> \n\n        </div>\n\n    </div>\n\n   </div>\n\n    </div>\n\n\n\n\n  );\n}\n}\n\nexport default About;\n","import React, {Component} from \"react\";\nimport { Card, Button, Modal } from \"react-bootstrap\";\n\n\nconst default_todoList = [];\n\nfunction load(){\n  let str_todos = localStorage.getItem('todoList')\n  //Using && to condition on str_todos else null\n  return (str_todos && JSON.parse(str_todos)) \n  }\n\nfunction store(todoList){\n  localStorage.setItem('todoList',JSON.stringify(todoList))\n}\n\n\n\nclass Contact extends Component {\n \n \n  state = {\n  };\n\n\n componentDidMount() {\n    let loaded_todoList = load()\n     this.setState(\n    //Using || backup assignment\n    {todoList: loaded_todoList || default_todoList,\n    newTodoContent: \"\"\n    }\n  );\n  }\n\n\n   toggleDone = (evt, i) => {\n    let todoList = this.state.todoList;\n    todoList[i].finished = !todoList[i].finished;\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n   addItem = () => {\n    //TODO 1: Make the add button work (hint: this.setState())\n    let todoList = this.state.todoList;\n    todoList.push({content: this.state.newTodoContent, finished:false})\n    this.setState({ todoList: todoList });\n    store(todoList)\n  };\n   deleteItem = (event, i) => {\n    //TODO 2: Make the delete button work (hint: event.stopPropagation())\n    event.stopPropagation()\n    let todoList = this.state.todoList;\n    todoList.splice(i,1)\n    this.setState({ todoList: todoList });\n    store(todoList)\n    this.props.decrease()\n  };\n\n\n\n\nrender() {\n\n\nlet todoList = this.state.todoList || default_todoList;\nlet itemsInList = todoList.length || 0;\n\n   const MyCard = ({i, foodType, glazing, quantity, total}) => {\n    return (\n      <div class=\"shadow card border-dark mb-3 rounded-0\" style={{ height: '18rem' }}>\n      <div class=\"row\">\n     <div class=\"col-lg-3\"><Card.Img variant=\"top\" src=\"https://www.cookingclassy.com/wp-content/uploads/2012/12/45+minute+cinnamon+rolls9.jpg\" style={{ height: '17.9rem', width: \"18rem\" }}/></div> \n      <div class=\"col-lg-6\"><i>Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.</i></div> \n      <div class=\"col-lg-2\"><i>Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.</i></div> \n\n      </div>\n             <button className=\"DeleteIcon\" onClick={(e) => this.deleteItem(e,i)}>{\"Edit\"}</button>\n   \n      </div>);\n  }\n    console.log(\"rerender\");\n\n    let list_content = [];\n     if (this.state.todoList != undefined){\n    for (let i = 0; i < this.state.todoList.length; i++) {\n      let todo = this.state.todoList[i];\n      list_content.push(\n        <div>\n\n   <div class=\"row my-0\">\n    <div class=\"col-lg-1\"></div>\n     <div class=\"col-lg-6\"><h5>Checkout Item</h5></div> \n      <div class=\"col-lg-3\"><h5>Quantity</h5></div> \n       <div class=\"col-lg-2\"><h5>Price</h5></div> \n   </div>\n\n      <div class=\"row\">  \n        <div class=\"col-lg-1\"></div>\n            <div class=\"col-lg-10\">\n              <MyCard i ={i} foodType={todo.foodType} glazing={todo.glazing} quantity={todo.quantity} total={todo.total}/>\n            </div>\n          </div>\n\n             <div class=\"col-lg-1\"></div>\n        </div>\n\n      );\n      console.log(todo);\n      }\n    }\n      \n\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n        </div>\n        {list_content}\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React, {Component} from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Footer, Home, About, Contact } from \"./components\";\n\n\n\n\nclass App extends Component {\n\n/*constructor(props) {\n    super(props)\n    this.state = {count: 0}\n};*/\n\n  state = {\n    count : 0\n  };\n\nincrementCount = () => {\n  this.setState((state) => {\n    // Important: read `state` instead of `this.state` when updating.\n    console.log(state.count)\n    return {count: state.count + 1}\n  });\n}\n\ndecrementCount = () => {\n  this.setState((state) => {\n    // Important: read `state` instead of `this.state` when updating.\n    console.log(state.count)\n    return {count: state.count - 1}\n  });\n}\n\n//this.incrementCount();\n\nrender() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation cartItemCount={this.state.count}/>\n        <Switch>\n          <Route path=\"/ReactMultiPageWebsite/\" exact component={() => <Home />} />\n          <Route path=\"/ReactMultiPageWebsite/about\" exact component={() => <About increase={this.incrementCount}/>} />\n          <Route path=\"/ReactMultiPageWebsite/contact\" exact component={() => <Contact decrease={this.decrementCount} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}